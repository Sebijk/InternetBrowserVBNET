<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAUAEBACAAEAAQCwAAAAVgAAABAQEAABAAQAKAEAAAYBAAAQEAAAAQAIAGgFAAAuAgAAEBAAAAEA
        GABoAwAAlgcAABAQAAABACAAaAQAAP4KAAAoAAAAEAAAACAAAAABAAEAAAAAAIAAAAAAAAAAAAAAAAIA
        AAAAAAAAAAAAAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAABjAAAAAwAAAAM
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/+AAB//gAAAE4AAABOAABzzgAAc84AAHPCAAByQAAAckAAAHPA
        AABzwAAAAEAAAABCAAB//gAAAAAAACgAAAAQAAAAIAAAAAEABAAAAAAAwAAAAAAAAAAAAAAAEAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZmZmZCZAAAJmZmZkJkAAAAAmQAAmQAAAACZAACZ
        AAAAAJkAAJmZAAAAmQ/wmZmQAACZD/CZ/5kAAJkAAJn/mQAAmQAAmf+ZCZmZmZCZmZAJmZmZkJmZAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAf/4AAH/+AAAATgAAAE4AAHPOAABzzgAAc8IAAHJAAAByQAAAc8AAAHPA
        AAAAQAAAAEIAAH/+AAAAAAAAKAAAABAAAAAgAAAAAQAIAAAAAABAAQAAAAAAAAAAAAAAAQAAAAAAAAAA
        AAD///8AAFXwAPD7/wCAAAAAgACAAICAAADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP//
        /wAJCQkAEhISAB8fHwAsLCwAOTk5AEVFRQBSUlIAX19fAGxsbAB4eHgAhYWFAJKSkgCfn58Aq6urALi4
        uADFxcUA0tLSAN7e3gDr6+sA+Pj4APD7/wCkoKAAwNzAAPDKpgAAAD4AAABdAAAAfAAAAJsAAAC6AAAA
        2QAAAPAAJCT/AEhI/wBsbP8AkJD/ALS0/wAAFD4AAB5dAAAofAAAMpsAADy6AABG2QAAVfAAJG3/AEiF
        /wBsnf8AkLX/ALTN/wAAKj4AAD9dAABUfAAAaZsAAH66AACT2QAAqvAAJLb/AEjC/wBszv8AkNr/ALTm
        /wAAPj4AAF1dAAB8fAAAm5sAALq6AADZ2QAA8PAAJP//AEj//wBs//8AkP//ALT//wAAPioAAF0/AAB8
        VAAAm2kAALp+AADZkwAA8KoAJP+2AEj/wgBs/84AkP/aALT/5gAAPhQAAF0eAAB8KAAAmzIAALo8AADZ
        RgAA8FUAJP9tAEj/hQBs/50AkP+1ALT/zQAAPgAAAF0AAAB8AAAAmwAAALoAAADZAAAA8AAAJP8kAEj/
        SABs/2wAkP+QALT/tAAUPgAAHl0AACh8AAAymwAAPLoAAEbZAABV8AAAbf8kAIX/SACd/2wAtf+QAM3/
        tAAqPgAAP10AAFR8AABpmwAAfroAAJPZAACq8AAAtv8kAML/SADO/2wA2v+QAOb/tAA+PgAAXV0AAHx8
        AACbmwAAuroAANnZAADw8AAA//8kAP//SAD//2wA//+QAP//tAA+KgAAXT8AAHxUAACbaQAAun4AANmT
        AADwqgAA/7YkAP/CSAD/zmwA/9qQAP/mtAA+FAAAXR4AAHwoAACbMgAAujwAANlGAADwVQAA/20kAP+F
        SAD/nWwA/7WQAP/NtAA+AAAAXQAAAHwAAACbAAAAugAAANkAAADwAAAA/yQkAP9ISAD/bGwA/5CQAP+0
        tAA+ABQAXQAeAHwAKACbADIAugA8ANkARgDwAFUA/yRtAP9IhQD/bJ0A/5C1AP+0zQA+ACoAXQA/AHwA
        VACbAGkAugB+ANkAkwDwAKoA/yS2AP9IwgD/bM4A/5DaAP+05gA+AD4AXQBdAHwAfACbAJsAugC6ANkA
        2QDwAPAA/yT/AP9I/wD/bP8A/5D/AP+0/wAqAD4APwBdAFQAfABpAJsAfgC6AJMA2QCqAPAAtiT/AMJI
        /wDObP8A2pD/AOa0/wAUAD4AHgBdACgAfAAyAJsAPAC6AEYA2QBVAPAAbST/AIVI/wCdbP8AtZD/AM20
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAgICAgIA
        AgIAAAAAAAICAgICAgICAAICAAAAAAAAAAACAgAAAAACAgAAAAAAAAAAAgIAAAAAAgIAAAAAAAAAAAIC
        AAAAAAICAgIAAAAAAAACAgADAwACAgICAgAAAAAAAgIAAwMAAgIDAwICAAAAAAICAAAAAAICAwMCAgAA
        AAACAgAAAAACAgMDAgIAAgICAgICAgIAAgICAgIAAAICAgICAgICAAICAgIAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/+AAB//gAAAE4AAABOAABzzgAAc84AAHPCAAByQAAAckAAAHPA
        AABzwAAAAEAAAABCAAB//gAAAAAAACgAAAAQAAAAIAAAAAEAGAAAAAAAQAMAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVfAAVfAAVfAAVfAAVfAAVfAAVfAAVfAAAAAAVfAA
        VfAAAAAAAAAAAAAAAAAAAAAAVfAAVfAAVfAAVfAAVfAAVfAAVfAAVfAAAAAAVfAAVfAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAVfAAVfAAAAAAAAAAAAAAAAAAVfAAVfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAVfAAVfAAAAAAAAAAAAAAAAAAVfAAVfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVfAAVfAAAAAA
        AAAAAAAAAAAAVfAAVfAAVfAAVfAAAAAAAAAAAAAAAAAAAAAAAAAAVfAAVfAAAADw+//w+/8AAAAAVfAA
        VfAAVfAAVfAAVfAAAAAAAAAAAAAAAAAAAAAAVfAAVfAAAADw+//w+/8AAAAAVfAAVfDw+//w+/8AVfAA
        VfAAAAAAAAAAAAAAAAAAVfAAVfAAAAAAAAAAAAAAAAAAVfAAVfDw+//w+/8AVfAAVfAAAAAAAAAAAAAA
        AAAAVfAAVfAAAAAAAAAAAAAAAAAAVfAAVfDw+//w+/8AVfAAVfAAAAAAVfAAVfAAVfAAVfAAVfAAVfAA
        VfAAVfAAAAAAVfAAVfAAVfAAVfAAVfAAAAAAAAAAVfAAVfAAVfAAVfAAVfAAVfAAVfAAVfAAAAAAVfAA
        VfAAVfAAVfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf/4AAH/+
        AAAATgAAAE4AAHPOAABzzgAAc8IAAHJAAAByQAAAc8AAAHPAAAAAQAAAAEIAAH/+AAAAAAAAKAAAABAA
        AAAgAAAAAQAgAAAAAABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AVfD/AFXw/wBV
        8P8AVfD/AFXw/wBV8P8AVfD/AFXw/wAAAAAAVfD/AFXw/wAAAAAAAAAAAAAAAAAAAP8AAAD/AFXw/wBV
        8P8AVfD/AFXw/wBV8P8AVfD/AFXw/wBV8P8AAAAAAFXw/wBV8P8AAAAAAAAAAAAAAAAAAAD/AAAA/wAA
        AAAAAAAAAAAAAABV8P8AVfD/AAAAAAAAAAAAAAAAAAAAAABV8P8AVfD/AAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAAAAAAAAAAAAAAAVfD/AFXw/wAAAAAAAAAAAAAAAAAAAAAAVfD/AFXw/wAAAAAAAAAAAAAAAAAA
        AP8AAAD/AAAAAAAAAAAAAAAAAFXw/wBV8P8AAAAAAAAAAAAAAAAAAAAAAFXw/wBV8P8AVfD/AFXw/wAA
        AAAAAAD/AAAA/wAAAAAAAAAAAAAAAABV8P8AVfD/AAAAAPD7///w+///AAAAAABV8P8AVfD/AFXw/wBV
        8P8AVfD/AAAA/wAAAP8AAAAAAAAAAAAAAAAAVfD/AFXw/wAAAADw+///8Pv//wAAAAAAVfD/AFXw//D7
        ///w+///AFXw/wBV8P8AAAD/AAAAAAAAAAAAAAAAAFXw/wBV8P8AAAAAAAAAAAAAAAAAAAAAAFXw/wBV
        8P/w+///8Pv//wBV8P8AVfD/AAAA/wAAAAAAAAAAAAAAAABV8P8AVfD/AAAAAAAAAAAAAAAAAAAAAABV
        8P8AVfD/8Pv///D7//8AVfD/AFXw/wAAAP8AVfD/AFXw/wBV8P8AVfD/AFXw/wBV8P8AVfD/AFXw/wAA
        AAAAVfD/AFXw/wBV8P8AVfD/AFXw/wAAAP8AAAD/AFXw/wBV8P8AVfD/AFXw/wBV8P8AVfD/AFXw/wBV
        8P8AAAAAAFXw/wBV8P8AVfD/AFXw/wAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAf/4AAH/+AAAATgAAAE4AAHPO
        AABzzgAAc8IAAHJAAAByQAAAc8AAAHPAAAAAQAAAAEIAAH/+AAAAAAAA
</value>
  </data>
</root>